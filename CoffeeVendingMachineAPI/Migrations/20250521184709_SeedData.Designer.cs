// <auto-generated />
using CoffeeVendingMachineAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeVendingMachineAPI.Migrations
{
    [DbContext(typeof(CoffeeContext))]
    [Migration("20250521184709_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CoffeeCustomizationCoffeeOrder", b =>
                {
                    b.Property<int>("CoffeeOrderId")
                        .HasColumnType("int");

                    b.Property<int>("CustomizationsId")
                        .HasColumnType("int");

                    b.HasKey("CoffeeOrderId", "CustomizationsId");

                    b.HasIndex("CustomizationsId");

                    b.ToTable("OrderCustomizations", (string)null);
                });

            modelBuilder.Entity("CoffeeVendingMachineAPI.Models.CoffeeCustomization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sugar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Creamer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Extra Milk"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Caramel"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cinnamon"
                        });
                });

            modelBuilder.Entity("CoffeeVendingMachineAPI.Models.CoffeeOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CoffeeTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeTypeId");

                    b.ToTable("CoffeeOrders");
                });

            modelBuilder.Entity("CoffeeVendingMachineAPI.Models.CoffeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CoffeeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Strong and black coffee",
                            Name = "Espresso"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Espresso with steamed milk",
                            Name = "Latte"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Espresso, milk, foam",
                            Name = "Cappuccino"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Espresso with a bit of milk",
                            Name = "Macchiato"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Espresso with hot water",
                            Name = "Americano"
                        });
                });

            modelBuilder.Entity("CoffeeCustomizationCoffeeOrder", b =>
                {
                    b.HasOne("CoffeeVendingMachineAPI.Models.CoffeeOrder", null)
                        .WithMany()
                        .HasForeignKey("CoffeeOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeVendingMachineAPI.Models.CoffeeCustomization", null)
                        .WithMany()
                        .HasForeignKey("CustomizationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeVendingMachineAPI.Models.CoffeeOrder", b =>
                {
                    b.HasOne("CoffeeVendingMachineAPI.Models.CoffeeType", "CoffeeType")
                        .WithMany()
                        .HasForeignKey("CoffeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoffeeType");
                });
#pragma warning restore 612, 618
        }
    }
}
